// <auto-generated />
using System;
using DiveLogBook.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DiveLogBook.Server.Migrations
{
    [DbContext(typeof(DiveDbContext))]
    [Migration("20200915185124_Dive")]
    partial class Dive
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DiveLogBook.Shared.Models.DiveInfo.DiveData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AirTemperature")
                        .HasColumnType("int");

                    b.Property<int>("BottomTime")
                        .HasColumnType("int");

                    b.Property<int?>("BreathingID")
                        .HasColumnType("int");

                    b.Property<string>("CertificationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Depth")
                        .HasColumnType("int");

                    b.Property<DateTime>("DiveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DiveEnteredAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DiveLocationID")
                        .HasColumnType("bigint");

                    b.Property<string>("EndPressureGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExposureProtectionHHFID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExposureProtectionID")
                        .HasColumnType("int");

                    b.Property<int?>("ExposureProtectionMM")
                        .HasColumnType("int");

                    b.Property<string>("NewPressureGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResidualNitrogen")
                        .HasColumnType("int");

                    b.Property<int>("SignatureTypeID")
                        .HasColumnType("int");

                    b.Property<bool?>("SpecialtyDive")
                        .HasColumnType("bit");

                    b.Property<int?>("SpecialtyTypeID")
                        .HasColumnType("int");

                    b.Property<string>("StartPressureGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SurfaceInterval")
                        .HasColumnType("int");

                    b.Property<int?>("TankPressureEnd")
                        .HasColumnType("int");

                    b.Property<int?>("TankPressureStart")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VerificationSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WaterBottomTemperature")
                        .HasColumnType("int");

                    b.Property<int?>("WaterConditionID")
                        .HasColumnType("int");

                    b.Property<int>("WaterEntryID")
                        .HasColumnType("int");

                    b.Property<int?>("WaterSurfaceTemperature")
                        .HasColumnType("int");

                    b.Property<int>("WaterTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("WaterVisibility")
                        .HasColumnType("int");

                    b.Property<int?>("WeatherID")
                        .HasColumnType("int");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dives");
                });

            modelBuilder.Entity("DiveLogBook.Shared.Models.DiveInfo.DiveDropdownData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lkps");
                });
#pragma warning restore 612, 618
        }
    }
}
